---
# Create vlans on host
- include: vcmp_host/add_tagged_vlan.yml 
  vars:
    - name: "{{ ext_vlan_name }}" 
    - tag: "{{ ext_vlan_tag }}"
- include: vcmp_host/add_tagged_vlan.yml
  vars:
    - name: "{{ int_vlan_name }}"
    - tag: "{{ int_vlan_tag }}"
- include: vcmp_host/add_tagged_vlan.yml
  vars:
    - name: "{{ ha_vlan_name }}"
    - tag: "{{ ha_vlan_tag }}"

# Create Guest
- include: vcmp_host/create_vcmp_guest.yml
- include: vcmp_host/check_guest_status.yml
- include: delay.yml
  vars:
    - delay: "3"
- include: bigip_command/check_services.yml

- include: bigip_device_ntp/set_ntp_server.yml 
  vars: 
    - ntp_server1: "0.de.pool.ntp.org" 
    - ntp_server2: "1.de.pool.ntp.org"

- include: bigip_device_ntp/set_timezone.yml 
  vars:
    - timezone: "Europe/Berlin"

- include: bigip_device_dns/set_dns.yml
  vars:
    - name_server:
      - "192.168.168.180"
      - "192.168.168.181"
    - search_domain:
      - "lab.muc.f5net.com"

- include: bigip_user/add_user.yml 
  vars:
    - username_credential: "ralf" 
    - password_credential: "{{ ralf_password }}" 
    - full_name: "Ralf Bruenig" 
    - partition_access: "all:admin" 
    - update_password: "on_create"

- include: bigip_user/add_user.yml 
  vars: 
    - username_credential: "bob" 
    - password_credential: "{{ bob_password }}" 
    - full_name: "Bob Bob" 
    - partition_access: "Common:operator" 
    - update_password: "on_create"

#- include: bigip_provision/provision_module.yml module="asm" level="nominal"
#- include: bigip_provision/provision_module.yml module="afm" level="nominal"
#- include: bigip_provision/provision_module.yml module="avr" level="nominal"


- include: bigip_ssl_certificate/import_certificate.yml

- include: bigip_command/set_gui_idle-timeout.yml
  vars:
    - gui_idle_timeout: 7200

- include: bigip_sys_db/set_records-per-screen.yml
  vars:
    - records_per_screen: 100

- include: bigip_sys_global/set_gui_setup.yml

- include: bigip_selfip/add_selfip.yml
  vars:
    - name: "ext_self_v4"
    - address: "{{ ext_self_ip }}"
    - netmask: "{{ ext_netmask }}"
    - vlan_name: "{{ ext_vlan_name }}"
    - route_domain: "0"
    - traffic_group: "traffic-group-local-only"

- include: bigip_selfip/add_selfip.yml
  vars:
    - name: "ext_self_floating_v4"
    - address: "{{ ext_floating_self_ip }}"
    - netmask: "{{ ext_netmask }}"
    - vlan_name: "{{ ext_vlan_name }}"
    - route_domain: "0"
    - traffic_group: "traffic-group-1"
  when: inventory_hostname == master

## "failed": true, "msg": "Could not find imported module support code for bigip_static_route.  Looked for either BOOLEANS_TRUE.py or convert_bool.py"
#- include: bigip_static_route/set_default_gateway.yml
- include: bigip_static_route/set_default_gateway_tmsh.yml

- include: bigip_selfip/add_selfip.yml
  vars:
    - name: "int_self_v4"
    - address: "{{ int_self_ip }}"
    - netmask: "{{ int_netmask }}"
    - vlan_name: "{{ int_vlan_name }}"
    - route_domain: "0"
    - traffic_group: "traffic-group-local-only"

- include: bigip_selfip/add_selfip.yml
  vars:
    - name: "int_self_floating_v4"
    - address: "{{ int_floating_self_ip }}"
    - netmask: "{{ int_netmask }}"
    - vlan_name: "{{ int_vlan_name }}"
    - route_domain: "0"
    - traffic_group: "traffic-group-1"
  when: inventory_hostname == master

- include: bigip_selfip/add_selfip.yml
  vars:
    - name: "ha_self_v4"
    - address: "{{ ha_self_ip }}"
    - netmask: "{{ ha_netmask }}"
    - vlan_name: "{{ ha_vlan_name }}"
    - route_domain: "0"
    - traffic_group: "traffic-group-local-only"

##########
# HA Setup

# This is needed for vcmp guests, since the device name is by default bigip1 and not the hostname.
- include: bigip_command/modify_device_name.yml

## Check, if one system need to be restored. If so, remove trust on remaining devices.
- include: bigip_command/reset_trust_if_needed.yml

- include: bigip_command/set_configsync_address.yml
  vars:
    - address: "{{ int_self_ip }}"

- include: bigip_command/set_heartbeat_address.yml
  vars:
    - address: "{{ ha_self_ip }}"
    - mgmt_address: "{{ mgmt_ip }}"

- include: bigip_command/set_mirroring_address.yml
  vars:
    - address: "{{ int_self_ip }}"

- include: bigip_command/set_device_trust.yml

- include: bigip_command/create_device_group.yml

## Sync config to peer, if the peer needs to be recovered
- include: ping.yml
  vars:
    - address: "{{ int_self_ip }}"
- include: bigip_command/initial_config_sync_after_rebuild.yml
  when: peer_recovered is defined and peer_recovered.changed
- include: bigip_command/initial_config_sync_after_rebuild.yml
  when: peer_recovered is defined and peer_recovered.changed
  vars:
    - device_group_name: "datasync-global-dg"
- include: bigip_command/check_sync_status.yml
  when: peer_recovered is defined and peer_recovered.changed

# debug:
#- name: Result output
#  debug:
#    msg:
#      - changed: "{{ peer_recovered.changed }}"
#  when: peer_recovered is defined


# Sync if devices are not in sync and peer was not recovered
- include: bigip_command/initial_config_sync_if_needed.yml
  when: peer_recovered is not defined or ( peer_recovered is defined and not peer_recovered.changed )
- include: bigip_command/initial_config_sync_if_needed.yml
  vars:
    - device_group_name: "datasync-global-dg"
  when: peer_recovered is not defined or ( peer_recovered is defined and not peer_recovered.changed )

# Final check of the ha status
- include: bigip_command/check_sync_status.yml
- include: bigip_command/check_ha_status.yml

# HA setup - end
################

...
