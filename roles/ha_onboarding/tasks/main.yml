---
# Target is Ansible v2.5
#- import_tasks: bigip_license/license.yml 
#  vars:
#    - key: "{{ license_key }}"

- import_tasks: bigip_vlan/add_untagged_vlan.yml 
  vars:
    - name: "external" 
    - untagged_interface: "1.1"

- import_tasks: bigip_selfip/add_selfip.yml 
  vars:
    - name: "ext_self_v4" 
    - address: "{{ ext_self_ip }}" 
    - netmask: "{{ ext_netmask }}"
    - vlan_name: "external" 
    - route_domain: "0" 
    - traffic_group: "traffic-group-local-only"

- import_tasks: bigip_selfip/add_selfip.yml
  vars:
    - name: "ext_self_floating_v4"
    - address: "{{ ext_floating_self_ip }}"
    - netmask: "{{ ext_netmask }}"
    - vlan_name: "external"
    - route_domain: "0"
    - traffic_group: "traffic-group-1"
  when: inventory_hostname == master

- import_tasks: bigip_vlan/add_untagged_vlan.yml 
  vars: 
    - name: "internal" 
    - untagged_interface: "1.2"

- import_tasks: bigip_selfip/add_selfip.yml 
  vars:
    - name: "int_self_v4" 
    - address: "{{ int_self_ip }}" 
    - netmask: "{{ int_netmask }}" 
    - vlan_name: "internal" 
    - route_domain: "0" 
    - traffic_group: "traffic-group-local-only"

- import_tasks: bigip_selfip/add_selfip.yml
  vars:
    - name: "int_self_floating_v4"
    - address: "{{ int_floating_self_ip }}"
    - netmask: "{{ int_netmask }}"
    - vlan_name: "internal"
    - route_domain: "0"
    - traffic_group: "traffic-group-1"
  when: inventory_hostname == master

- import_tasks: bigip_vlan/add_untagged_vlan.yml
  vars:
    - name: "ha"
    - untagged_interface: "1.3"

- import_tasks: bigip_selfip/add_selfip.yml
  vars:
    - name: "ha_self_v4"
    - address: "{{ ha_self_ip }}"
    - netmask: "{{ ha_netmask }}"
    - vlan_name: "ha"
    - route_domain: "0"
    - traffic_group: "traffic-group-local-only"


- import_tasks: bigip_device_ntp/set_ntp_server.yml 
  vars: 
    - ntp_server1: "0.de.pool.ntp.org" 
    - ntp_server2: "1.de.pool.ntp.org"

- import_tasks: bigip_device_ntp/set_timezone.yml 
  vars:
    - timezone: "Europe/Berlin"

##bug - https://github.com/mcgonagle/ansible_f5/issues/22
- import_tasks: bigip_hostname/set_hostname.yml
#- import_tasks: bigip_hostname/set_hostname.yml hostname="bigip.demo.local"

# Issue dhcp needs to be disabled - https://github.com/mcgonagle/ansible_f5/issues/10
- import_tasks: bigip_device_dns/set_dns.yml name_server1="10.128.10.2" name_server2="8.8.4.4" search_domain1="localdomain" search_domain2="lab.local" 

#- import_tasks: bigip_user/add_user.yml 
#  vars:
#    - username_credential: "ralf" 
#    - password_credential: "{{ ralf_password }}" 
#    - full_name: "ralf Bruenig" 
#    - partition_access: "all:admin" 
#    - update_password: "on_create"

#- import_tasks: bigip_user/add_user.yml 
#  vars: 
#    - username_credential: "bob" 
#    - password_credential: "{{ bob_password }}" 
#    - full_name: "Bob Bob" 
#    - partition_access: "Common:operator" 
#    - update_password: "on_create"

#- import_tasks: bigip_provision/provision_module.yml module="asm" level="nominal"
#- import_tasks: bigip_provision/provision_module.yml module="afm" level="nominal"
#- import_tasks: bigip_provision/provision_module.yml module="avr" level="nominal"


#- import_tasks: bigip_ssl_certificate/import_certificate.yml

- import_tasks: bigip_command/set_gui_idle-timeout.yml
  vars:
    - gui_idle_timeout: 7200

- import_tasks: bigip_sys_db/set_records-per-screen.yml
  vars:
    - records_per_screen: 100

- import_tasks: bigip_sys_global/set_gui_setup.yml


##########
# HA Setup

## Check if master need to be restored. If so, remove trust on remaining devices.
- import_tasks: bigip_command/reset_trust_if_needed.yml

- import_tasks: bigip_command/set_configsync_address.yml
  vars:
    - address: "{{ int_self_ip }}"

- import_tasks: bigip_command/set_heartbeat_address.yml
  vars:
    - address: "{{ ha_self_ip }}"
    - mgmt_address: "{{ mgmt_ip }}"

- import_tasks: bigip_command/set_mirroring_address.yml
  vars:
    - address: "{{ int_self_ip }}"

- import_tasks: bigip_command/set_device_trust.yml

- import_tasks: bigip_command/create_device_group.yml

## Sync config to peer, if the peer needs to be recovered
- import_tasks: bigip_command/initial_config_sync_after_rebuild.yml
  when: peer_recovered is defined and peer_recovered.changed
- import_tasks: bigip_command/initial_config_sync_after_rebuild.yml
  when: peer_recovered is defined and peer_recovered.changed
  vars:
    - device_group_name: "datasync-global-dg"
- import_tasks: bigip_command/check_sync_status.yml
  when: peer_recovered is defined and peer_recovered.changed

# Sync if the peer is created new
- import_tasks: bigip_command/initial_config_sync_if_needed.yml
- import_tasks: bigip_command/initial_config_sync_if_needed.yml
  vars:
    - device_group_name: "datasync-global-dg"

- import_tasks: bigip_command/check_sync_status.yml

- import_tasks: bigip_command/check_ha_status.yml

# HA setup - end
################
...
